{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar Config = require('../../../apiGoogleconfig.json');\n\nvar ApiCalendar = function () {\n  function ApiCalendar() {\n    _classCallCheck(this, ApiCalendar);\n\n    this.sign = false;\n    this.gapi = null;\n    this.onLoadCallback = null;\n    this.calendar = 'primary';\n\n    try {\n      this.updateSigninStatus = this.updateSigninStatus.bind(this);\n      this.initClient = this.initClient.bind(this);\n      this.handleSignoutClick = this.handleSignoutClick.bind(this);\n      this.handleAuthClick = this.handleAuthClick.bind(this);\n      this.createEvent = this.createEvent.bind(this);\n      this.listUpcomingEvents = this.listUpcomingEvents.bind(this);\n      this.listEvents = this.listEvents.bind(this);\n      this.createEventFromNow = this.createEventFromNow.bind(this);\n      this.listenSign = this.listenSign.bind(this);\n      this.onLoad = this.onLoad.bind(this);\n      this.setCalendar = this.setCalendar.bind(this);\n      this.updateEvent = this.updateEvent.bind(this);\n      this.deleteEvent = this.deleteEvent.bind(this);\n      this.getEvent = this.getEvent.bind(this);\n      this.getBasicUserProfile = this.getBasicUserProfile.bind(this);\n      this.handleClientLoad();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  /**\n   * Update connection status.\n   * @param {boolean} isSignedIn\n   */\n\n\n  _createClass(ApiCalendar, [{\n    key: 'updateSigninStatus',\n    value: function updateSigninStatus(isSignedIn) {\n      this.sign = isSignedIn;\n    }\n    /**\n     * Auth to the google Api.\n     */\n\n  }, {\n    key: 'initClient',\n    value: function initClient() {\n      var _this = this;\n\n      this.gapi = window['gapi'];\n      this.gapi.client.init(Config).then(function () {\n        // Listen for sign-in state changes.\n        _this.gapi.auth2.getAuthInstance().isSignedIn.listen(_this.updateSigninStatus); // Handle the initial sign-in state.\n\n\n        _this.updateSigninStatus(_this.gapi.auth2.getAuthInstance().isSignedIn.get());\n\n        if (_this.onLoadCallback) {\n          _this.onLoadCallback();\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n    /**\n     * Init Google Api\n     * And create gapi in global\n     */\n\n  }, {\n    key: 'handleClientLoad',\n    value: function handleClientLoad() {\n      var _this2 = this;\n\n      this.gapi = window['gapi'];\n      var script = document.createElement('script');\n      script.src = 'https://apis.google.com/js/api.js';\n      document.body.appendChild(script);\n\n      script.onload = function () {\n        window['gapi'].load('client:auth2', _this2.initClient);\n      };\n    }\n    /**\n     * Sign in Google user account\n     */\n\n  }, {\n    key: 'handleAuthClick',\n    value: function handleAuthClick() {\n      if (this.gapi) {\n        return this.gapi.auth2.getAuthInstance().signIn();\n      } else {\n        console.log('Error: this.gapi not loaded');\n        return Promise.reject(new Error('Error: this.gapi not loaded'));\n      }\n    }\n    /**\n     * Set the default attribute calendar\n     * @param {string} newCalendar\n     */\n\n  }, {\n    key: 'setCalendar',\n    value: function setCalendar(newCalendar) {\n      this.calendar = newCalendar;\n    }\n    /**\n     * Execute the callback function when a user is disconnected or connected with the sign status.\n     * @param callback\n     */\n\n  }, {\n    key: 'listenSign',\n    value: function listenSign(callback) {\n      if (this.gapi) {\n        this.gapi.auth2.getAuthInstance().isSignedIn.listen(callback);\n      } else {\n        console.log('Error: this.gapi not loaded');\n      }\n    }\n    /**\n     * Execute the callback function when gapi is loaded\n     * @param callback\n     */\n\n  }, {\n    key: 'onLoad',\n    value: function onLoad(callback) {\n      if (this.gapi) {\n        callback();\n      } else {\n        this.onLoadCallback = callback;\n      }\n    }\n    /**\n     * Sign out user google account\n     */\n\n  }, {\n    key: 'handleSignoutClick',\n    value: function handleSignoutClick() {\n      if (this.gapi) {\n        this.gapi.auth2.getAuthInstance().signOut();\n      } else {\n        console.log('Error: this.gapi not loaded');\n      }\n    }\n    /**\n     * List all events in the calendar\n     * @param {number} maxResults to see\n     * @param {string} calendarId to see by default use the calendar attribute\n     * @returns {any}\n     */\n\n  }, {\n    key: 'listUpcomingEvents',\n    value: function listUpcomingEvents(maxResults) {\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n\n      if (this.gapi) {\n        return this.gapi.client.calendar.events.list({\n          calendarId: calendarId,\n          timeMin: new Date().toISOString(),\n          showDeleted: false,\n          singleEvents: true,\n          maxResults: maxResults,\n          orderBy: 'startTime'\n        });\n      } else {\n        console.log('Error: this.gapi not loaded');\n        return false;\n      }\n    }\n    /**\n     * List all events in the calendar queried by custom query options\n     * See all available options here https://developers.google.com/calendar/v3/reference/events/list\n     * @param {object} queryOptions to see\n     * @param {string} calendarId to see by default use the calendar attribute\n     * @returns {any}\n     */\n\n  }, {\n    key: 'listEvents',\n    value: function listEvents(queryOptions) {\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n\n      if (this.gapi) {\n        return this.gapi.client.calendar.events.list(Object.assign({\n          calendarId: calendarId\n        }, queryOptions));\n      } else {\n        console.log('Error: this.gapi not loaded');\n        return false;\n      }\n    }\n    /**\n     * Create an event from the current time for a certain period\n     * @param {number} time in minutes for the event\n     * @param {string} summary of the event\n     * @param {string} description of the event\n     * @param {string} calendarId\n     * @param {string} timeZone The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".)\n     * @returns {any}\n     */\n\n  }, {\n    key: 'createEventFromNow',\n    value: function createEventFromNow(_ref) {\n      var time = _ref.time,\n          summary = _ref.summary,\n          _ref$description = _ref.description,\n          description = _ref$description === undefined ? '' : _ref$description;\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n      var timeZone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Europe/Paris';\n      var event = {\n        summary: summary,\n        description: description,\n        start: {\n          dateTime: new Date().toISOString(),\n          timeZone: timeZone\n        },\n        end: {\n          dateTime: new Date(new Date().getTime() + time * 60000),\n          timeZone: timeZone\n        }\n      };\n      return this.createEvent(event, calendarId);\n    }\n    /**\n     * Create Calendar event\n     * @param {string} calendarId for the event.\n     * @param {object} event with start and end dateTime\n     * @param {string} sendUpdates Acceptable values are: \"all\", \"externalOnly\", \"none\"\n     * @returns {any}\n     */\n\n  }, {\n    key: 'createEvent',\n    value: function createEvent(event) {\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n      var sendUpdates = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'none';\n\n      if (this.gapi) {\n        return this.gapi.client.calendar.events.insert({\n          calendarId: calendarId,\n          resource: event,\n          sendUpdates: sendUpdates\n        });\n      } else {\n        console.log('Error: this.gapi not loaded');\n        return false;\n      }\n    }\n    /**\n     * Delete an event in the calendar.\n     * @param {string} eventId of the event to delete.\n     * @param {string} calendarId where the event is.\n     * @returns {any} Promise resolved when the event is deleted.\n     */\n\n  }, {\n    key: 'deleteEvent',\n    value: function deleteEvent(eventId) {\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n\n      if (this.gapi) {\n        return this.gapi.client.calendar.events.delete({\n          calendarId: calendarId,\n          eventId: eventId\n        });\n      } else {\n        console.log('Error: gapi is not loaded use onLoad before please.');\n        return null;\n      }\n    }\n    /**\n     * @returns {any} Get the user's basic profile information. Documentation: https://developers.google.com/identity/sign-in/web/reference#googleusergetbasicprofile\n     */\n\n  }, {\n    key: 'getBasicUserProfile',\n    value: function getBasicUserProfile() {\n      if (this.gapi) {\n        return this.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile();\n      } else {\n        console.log('Error: gapi is not loaded use onLoad before please.');\n        return null;\n      }\n    }\n    /**\n     * Update Calendar event\n     * @param {string} calendarId for the event.\n     * @param {string} eventId of the event.\n     * @param {object} event with details to update, e.g. summary\n     * @param {string} sendUpdates Acceptable values are: \"all\", \"externalOnly\", \"none\"\n     * @returns {any}\n     */\n\n  }, {\n    key: 'updateEvent',\n    value: function updateEvent(event, eventId) {\n      var calendarId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.calendar;\n      var sendUpdates = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'none';\n\n      if (this.gapi) {\n        return this.gapi.client.calendar.events.patch({\n          calendarId: calendarId,\n          eventId: eventId,\n          resource: event,\n          sendUpdates: sendUpdates\n        });\n      } else {\n        console.log('Error: gapi is not loaded use onLoad before please.');\n        return null;\n      }\n    }\n    /**\n     * Get Calendar event\n     * @param {string} calendarId for the event.\n     * @param {string} eventId specifies individual event\n     * @returns {any}\n     */\n\n  }, {\n    key: 'getEvent',\n    value: function getEvent(eventId) {\n      var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n\n      if (this.gapi) {\n        return this.gapi.client.calendar.events.get({\n          calendarId: calendarId,\n          eventId: eventId\n        });\n      } else {\n        console.log('Error: gapi is not loaded use onLoad before please.');\n        return null;\n      }\n    }\n  }]);\n\n  return ApiCalendar;\n}();\n\nvar apiCalendar = void 0;\n\ntry {\n  apiCalendar = new ApiCalendar();\n} catch (e) {\n  console.log(e);\n}\n\nexports.default = apiCalendar;","map":{"version":3,"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","Config","require","ApiCalendar","sign","gapi","onLoadCallback","calendar","updateSigninStatus","bind","initClient","handleSignoutClick","handleAuthClick","createEvent","listUpcomingEvents","listEvents","createEventFromNow","listenSign","onLoad","setCalendar","updateEvent","deleteEvent","getEvent","getBasicUserProfile","handleClientLoad","e","console","log","isSignedIn","_this","window","client","init","then","auth2","getAuthInstance","listen","get","catch","_this2","script","document","createElement","src","body","appendChild","onload","load","signIn","Promise","reject","Error","newCalendar","callback","signOut","maxResults","calendarId","arguments","undefined","events","list","timeMin","Date","toISOString","showDeleted","singleEvents","orderBy","queryOptions","assign","_ref","time","summary","_ref$description","description","timeZone","event","start","dateTime","end","getTime","sendUpdates","insert","resource","eventId","delete","currentUser","getBasicProfile","patch","apiCalendar","default"],"sources":["/Users/declannelson/code/gcal/node_modules/react-google-calendar-api/build/ApiCalendar.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Config = require('../../../apiGoogleconfig.json');\n\nvar ApiCalendar = function () {\n    function ApiCalendar() {\n        _classCallCheck(this, ApiCalendar);\n\n        this.sign = false;\n        this.gapi = null;\n        this.onLoadCallback = null;\n        this.calendar = 'primary';\n        try {\n            this.updateSigninStatus = this.updateSigninStatus.bind(this);\n            this.initClient = this.initClient.bind(this);\n            this.handleSignoutClick = this.handleSignoutClick.bind(this);\n            this.handleAuthClick = this.handleAuthClick.bind(this);\n            this.createEvent = this.createEvent.bind(this);\n            this.listUpcomingEvents = this.listUpcomingEvents.bind(this);\n            this.listEvents = this.listEvents.bind(this);\n            this.createEventFromNow = this.createEventFromNow.bind(this);\n            this.listenSign = this.listenSign.bind(this);\n            this.onLoad = this.onLoad.bind(this);\n            this.setCalendar = this.setCalendar.bind(this);\n            this.updateEvent = this.updateEvent.bind(this);\n            this.deleteEvent = this.deleteEvent.bind(this);\n            this.getEvent = this.getEvent.bind(this);\n            this.getBasicUserProfile = this.getBasicUserProfile.bind(this);\n            this.handleClientLoad();\n        } catch (e) {\n            console.log(e);\n        }\n    }\n    /**\n     * Update connection status.\n     * @param {boolean} isSignedIn\n     */\n\n\n    _createClass(ApiCalendar, [{\n        key: 'updateSigninStatus',\n        value: function updateSigninStatus(isSignedIn) {\n            this.sign = isSignedIn;\n        }\n        /**\n         * Auth to the google Api.\n         */\n\n    }, {\n        key: 'initClient',\n        value: function initClient() {\n            var _this = this;\n\n            this.gapi = window['gapi'];\n            this.gapi.client.init(Config).then(function () {\n                // Listen for sign-in state changes.\n                _this.gapi.auth2.getAuthInstance().isSignedIn.listen(_this.updateSigninStatus);\n                // Handle the initial sign-in state.\n                _this.updateSigninStatus(_this.gapi.auth2.getAuthInstance().isSignedIn.get());\n                if (_this.onLoadCallback) {\n                    _this.onLoadCallback();\n                }\n            }).catch(function (e) {\n                console.log(e);\n            });\n        }\n        /**\n         * Init Google Api\n         * And create gapi in global\n         */\n\n    }, {\n        key: 'handleClientLoad',\n        value: function handleClientLoad() {\n            var _this2 = this;\n\n            this.gapi = window['gapi'];\n            var script = document.createElement('script');\n            script.src = 'https://apis.google.com/js/api.js';\n            document.body.appendChild(script);\n            script.onload = function () {\n                window['gapi'].load('client:auth2', _this2.initClient);\n            };\n        }\n        /**\n         * Sign in Google user account\n         */\n\n    }, {\n        key: 'handleAuthClick',\n        value: function handleAuthClick() {\n            if (this.gapi) {\n                return this.gapi.auth2.getAuthInstance().signIn();\n            } else {\n                console.log('Error: this.gapi not loaded');\n                return Promise.reject(new Error('Error: this.gapi not loaded'));\n            }\n        }\n        /**\n         * Set the default attribute calendar\n         * @param {string} newCalendar\n         */\n\n    }, {\n        key: 'setCalendar',\n        value: function setCalendar(newCalendar) {\n            this.calendar = newCalendar;\n        }\n        /**\n         * Execute the callback function when a user is disconnected or connected with the sign status.\n         * @param callback\n         */\n\n    }, {\n        key: 'listenSign',\n        value: function listenSign(callback) {\n            if (this.gapi) {\n                this.gapi.auth2.getAuthInstance().isSignedIn.listen(callback);\n            } else {\n                console.log('Error: this.gapi not loaded');\n            }\n        }\n        /**\n         * Execute the callback function when gapi is loaded\n         * @param callback\n         */\n\n    }, {\n        key: 'onLoad',\n        value: function onLoad(callback) {\n            if (this.gapi) {\n                callback();\n            } else {\n                this.onLoadCallback = callback;\n            }\n        }\n        /**\n         * Sign out user google account\n         */\n\n    }, {\n        key: 'handleSignoutClick',\n        value: function handleSignoutClick() {\n            if (this.gapi) {\n                this.gapi.auth2.getAuthInstance().signOut();\n            } else {\n                console.log('Error: this.gapi not loaded');\n            }\n        }\n        /**\n         * List all events in the calendar\n         * @param {number} maxResults to see\n         * @param {string} calendarId to see by default use the calendar attribute\n         * @returns {any}\n         */\n\n    }, {\n        key: 'listUpcomingEvents',\n        value: function listUpcomingEvents(maxResults) {\n            var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n\n            if (this.gapi) {\n                return this.gapi.client.calendar.events.list({\n                    calendarId: calendarId,\n                    timeMin: new Date().toISOString(),\n                    showDeleted: false,\n                    singleEvents: true,\n                    maxResults: maxResults,\n                    orderBy: 'startTime'\n                });\n            } else {\n                console.log('Error: this.gapi not loaded');\n                return false;\n            }\n        }\n        /**\n         * List all events in the calendar queried by custom query options\n         * See all available options here https://developers.google.com/calendar/v3/reference/events/list\n         * @param {object} queryOptions to see\n         * @param {string} calendarId to see by default use the calendar attribute\n         * @returns {any}\n         */\n\n    }, {\n        key: 'listEvents',\n        value: function listEvents(queryOptions) {\n            var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n\n            if (this.gapi) {\n                return this.gapi.client.calendar.events.list(Object.assign({ calendarId: calendarId }, queryOptions));\n            } else {\n                console.log('Error: this.gapi not loaded');\n                return false;\n            }\n        }\n        /**\n         * Create an event from the current time for a certain period\n         * @param {number} time in minutes for the event\n         * @param {string} summary of the event\n         * @param {string} description of the event\n         * @param {string} calendarId\n         * @param {string} timeZone The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. \"Europe/Zurich\".)\n         * @returns {any}\n         */\n\n    }, {\n        key: 'createEventFromNow',\n        value: function createEventFromNow(_ref) {\n            var time = _ref.time,\n                summary = _ref.summary,\n                _ref$description = _ref.description,\n                description = _ref$description === undefined ? '' : _ref$description;\n            var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n            var timeZone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Europe/Paris';\n\n            var event = {\n                summary: summary,\n                description: description,\n                start: {\n                    dateTime: new Date().toISOString(),\n                    timeZone: timeZone\n                },\n                end: {\n                    dateTime: new Date(new Date().getTime() + time * 60000),\n                    timeZone: timeZone\n                }\n            };\n            return this.createEvent(event, calendarId);\n        }\n        /**\n         * Create Calendar event\n         * @param {string} calendarId for the event.\n         * @param {object} event with start and end dateTime\n         * @param {string} sendUpdates Acceptable values are: \"all\", \"externalOnly\", \"none\"\n         * @returns {any}\n         */\n\n    }, {\n        key: 'createEvent',\n        value: function createEvent(event) {\n            var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n            var sendUpdates = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'none';\n\n            if (this.gapi) {\n                return this.gapi.client.calendar.events.insert({\n                    calendarId: calendarId,\n                    resource: event,\n                    sendUpdates: sendUpdates\n                });\n            } else {\n                console.log('Error: this.gapi not loaded');\n                return false;\n            }\n        }\n        /**\n         * Delete an event in the calendar.\n         * @param {string} eventId of the event to delete.\n         * @param {string} calendarId where the event is.\n         * @returns {any} Promise resolved when the event is deleted.\n         */\n\n    }, {\n        key: 'deleteEvent',\n        value: function deleteEvent(eventId) {\n            var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n\n            if (this.gapi) {\n                return this.gapi.client.calendar.events.delete({\n                    calendarId: calendarId,\n                    eventId: eventId\n                });\n            } else {\n                console.log('Error: gapi is not loaded use onLoad before please.');\n                return null;\n            }\n        }\n        /**\n         * @returns {any} Get the user's basic profile information. Documentation: https://developers.google.com/identity/sign-in/web/reference#googleusergetbasicprofile\n         */\n\n    }, {\n        key: 'getBasicUserProfile',\n        value: function getBasicUserProfile() {\n            if (this.gapi) {\n                return this.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile();\n            } else {\n                console.log('Error: gapi is not loaded use onLoad before please.');\n                return null;\n            }\n        }\n        /**\n         * Update Calendar event\n         * @param {string} calendarId for the event.\n         * @param {string} eventId of the event.\n         * @param {object} event with details to update, e.g. summary\n         * @param {string} sendUpdates Acceptable values are: \"all\", \"externalOnly\", \"none\"\n         * @returns {any}\n         */\n\n    }, {\n        key: 'updateEvent',\n        value: function updateEvent(event, eventId) {\n            var calendarId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.calendar;\n            var sendUpdates = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'none';\n\n            if (this.gapi) {\n                return this.gapi.client.calendar.events.patch({\n                    calendarId: calendarId,\n                    eventId: eventId,\n                    resource: event,\n                    sendUpdates: sendUpdates\n                });\n            } else {\n                console.log('Error: gapi is not loaded use onLoad before please.');\n                return null;\n            }\n        }\n        /**\n         * Get Calendar event\n         * @param {string} calendarId for the event.\n         * @param {string} eventId specifies individual event\n         * @returns {any}\n         */\n\n    }, {\n        key: 'getEvent',\n        value: function getEvent(eventId) {\n            var calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.calendar;\n\n            if (this.gapi) {\n                return this.gapi.client.calendar.events.get({\n                    calendarId: calendarId,\n                    eventId: eventId\n                });\n            } else {\n                console.log('Error: gapi is not loaded use onLoad before please.');\n                return null;\n            }\n        }\n    }]);\n\n    return ApiCalendar;\n}();\n\nvar apiCalendar = void 0;\ntry {\n    apiCalendar = new ApiCalendar();\n} catch (e) {\n    console.log(e);\n}\nexports.default = apiCalendar;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}