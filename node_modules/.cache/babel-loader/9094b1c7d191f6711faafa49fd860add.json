{"ast":null,"code":"var _jsxFileName = \"/Users/declannelson/code/gcal/v1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ApiCalendar from 'react-google-calendar-api';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [auth, setAuth] = useState(false);\n  const [processed, setProcessed] = useState(true);\n  const [data, setData] = useState(false);\n\n  const handleSignIn = e => {\n    ApiCalendar.handleAuthClick();\n\n    if (ApiCalendar.sign) {\n      setAuth(true);\n      console.log(auth);\n    }\n  };\n\n  const handleSignOut = e => {\n    ApiCalendar.handleSignoutClick();\n    setAuth(false);\n    console.log(auth);\n  };\n\n  const getEvents = async () => {\n    while (!ApiCalendar.sign) {\n      console.log('waiting to sign in');\n    }\n\n    const {\n      result\n    } = await ApiCalendar.listEvents({\n      timeMin: moment().subtract(3, 'days').toISOString(),\n      timeMax: moment().toISOString(),\n      showDeleted: true,\n      maxResults: 15,\n      orderBy: 'updated'\n    });\n    console.log(result);\n    setData(result);\n    setProcessed(true);\n  };\n\n  const displayEvents = () => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!auth ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => handleSignIn(e),\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handleSignOut(e),\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => getEvents(),\n        children: \"Process Calendar Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), processed ? displayEvents() : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BJSjKDpT5L6k7WCT+PkOcAtPHIo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ApiCalendar","moment","App","auth","setAuth","processed","setProcessed","data","setData","handleSignIn","e","handleAuthClick","sign","console","log","handleSignOut","handleSignoutClick","getEvents","result","listEvents","timeMin","subtract","toISOString","timeMax","showDeleted","maxResults","orderBy","displayEvents"],"sources":["/Users/declannelson/code/gcal/v1/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport ApiCalendar from 'react-google-calendar-api';\nimport moment from 'moment';\n\nfunction App() {\n  const [auth, setAuth] = useState(false);\n  const [processed, setProcessed] = useState(true);\n  const [data, setData] = useState(false);\n\n  const handleSignIn = (e) => {\n    ApiCalendar.handleAuthClick();\n    if (ApiCalendar.sign) {\n      setAuth(true);\n      console.log(auth);\n    }\n  }\n  \n  const handleSignOut = (e) => {\n    ApiCalendar.handleSignoutClick();\n    setAuth(false);\n    console.log(auth);\n  }\n\n  const getEvents = async () => {\n    while (!ApiCalendar.sign) {\n      console.log('waiting to sign in');\n    }\n    const { result } = await ApiCalendar.listEvents({\n      timeMin: moment().subtract(3, 'days').toISOString(),\n      timeMax: moment().toISOString(),\n      showDeleted: true,\n      maxResults: 15,\n      orderBy: 'updated'\n    });\n    console.log(result);\n    setData(result);\n    setProcessed(true);\n  }\n\n  const displayEvents = () => {\n    console.log(data);\n  }\n\n  return (\n    <div className=\"App\">\n      {!auth ? \n        <button onClick={(e) => handleSignIn(e)}>Sign In</button> : \n        <>\n          <button onClick={(e) => handleSignOut(e)}>Sign Out</button>\n          <button onClick={(e) => getEvents()}>Process Calendar Data</button>\n        </>\n      }\n      {processed ? displayEvents(): <p>Loading</p>}\n    </div>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;;EAEA,MAAMU,YAAY,GAAIC,CAAD,IAAO;IAC1BV,WAAW,CAACW,eAAZ;;IACA,IAAIX,WAAW,CAACY,IAAhB,EAAsB;MACpBR,OAAO,CAAC,IAAD,CAAP;MACAS,OAAO,CAACC,GAAR,CAAYX,IAAZ;IACD;EACF,CAND;;EAQA,MAAMY,aAAa,GAAIL,CAAD,IAAO;IAC3BV,WAAW,CAACgB,kBAAZ;IACAZ,OAAO,CAAC,KAAD,CAAP;IACAS,OAAO,CAACC,GAAR,CAAYX,IAAZ;EACD,CAJD;;EAMA,MAAMc,SAAS,GAAG,YAAY;IAC5B,OAAO,CAACjB,WAAW,CAACY,IAApB,EAA0B;MACxBC,OAAO,CAACC,GAAR,CAAY,oBAAZ;IACD;;IACD,MAAM;MAAEI;IAAF,IAAa,MAAMlB,WAAW,CAACmB,UAAZ,CAAuB;MAC9CC,OAAO,EAAEnB,MAAM,GAAGoB,QAAT,CAAkB,CAAlB,EAAqB,MAArB,EAA6BC,WAA7B,EADqC;MAE9CC,OAAO,EAAEtB,MAAM,GAAGqB,WAAT,EAFqC;MAG9CE,WAAW,EAAE,IAHiC;MAI9CC,UAAU,EAAE,EAJkC;MAK9CC,OAAO,EAAE;IALqC,CAAvB,CAAzB;IAOAb,OAAO,CAACC,GAAR,CAAYI,MAAZ;IACAV,OAAO,CAACU,MAAD,CAAP;IACAZ,YAAY,CAAC,IAAD,CAAZ;EACD,CAdD;;EAgBA,MAAMqB,aAAa,GAAG,MAAM;IAC1Bd,OAAO,CAACC,GAAR,CAAYP,IAAZ;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,WACG,CAACJ,IAAD,gBACC;MAAQ,OAAO,EAAGO,CAAD,IAAOD,YAAY,CAACC,CAAD,CAApC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,gBAEC;MAAA,wBACE;QAAQ,OAAO,EAAGA,CAAD,IAAOK,aAAa,CAACL,CAAD,CAArC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAGA,CAAD,IAAOO,SAAS,EAAjC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA,gBAHJ,EAQGZ,SAAS,GAAGsB,aAAa,EAAhB,gBAAoB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARhC;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GAnDQzB,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}