{"ast":null,"code":"var _jsxFileName = \"/Users/declannelson/code/gcal/v1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ApiCalendar from 'react-google-calendar-api';\nimport moment from 'moment';\nimport ReactWordCloud from 'react-wordcloud';\nimport { colorCounts, processText } from './data-utils/process-calendar-data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [auth, setAuth] = useState(false);\n  const [processed, setProcessed] = useState(true);\n  const [data, setData] = useState(false);\n  const [wordCloud, setWordCloud] = useState(null);\n\n  const handleSignIn = e => {\n    ApiCalendar.handleAuthClick();\n\n    if (ApiCalendar.sign) {\n      setAuth(true);\n      console.log(auth);\n    }\n  };\n\n  const handleSignOut = e => {\n    ApiCalendar.handleSignoutClick();\n    setAuth(false);\n    console.log(auth);\n  };\n\n  const getEvents = async () => {\n    while (!ApiCalendar.sign) {\n      console.log('waiting to sign in');\n    }\n\n    const {\n      result\n    } = await ApiCalendar.listEvents({\n      timeMin: moment().subtract(3, 'days').toISOString(),\n      timeMax: moment().toISOString(),\n      showDeleted: true,\n      maxResults: 15,\n      orderBy: 'updated'\n    });\n    console.log(result);\n    setData(result);\n    setProcessed(true);\n  };\n\n  const handleGraphics = () => {\n    if (data.items) {\n      const wordMap = processText(data.items);\n      let wordCloud = [];\n      Object.keys(wordMap).forEach(key => {\n        wordCloud.push({\n          text: key,\n          value: wordMap[key]\n        });\n      }); // temp\n\n      return /*#__PURE__*/_jsxDEV(ReactWordCloud, {\n        words: wordCloud\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!auth ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => handleSignIn(e),\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handleSignOut(e),\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => getEvents(),\n        children: \"Process Calendar Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), processed ? handleGraphics() : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0JJ3z8vttOl1NQjQyjnUl+opIJ4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ApiCalendar","moment","ReactWordCloud","colorCounts","processText","App","auth","setAuth","processed","setProcessed","data","setData","wordCloud","setWordCloud","handleSignIn","e","handleAuthClick","sign","console","log","handleSignOut","handleSignoutClick","getEvents","result","listEvents","timeMin","subtract","toISOString","timeMax","showDeleted","maxResults","orderBy","handleGraphics","items","wordMap","Object","keys","forEach","key","push","text","value"],"sources":["/Users/declannelson/code/gcal/v1/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport ApiCalendar from 'react-google-calendar-api';\nimport moment from 'moment';\nimport ReactWordCloud from 'react-wordcloud';\nimport { colorCounts, processText } from './data-utils/process-calendar-data'\n\nfunction App() {\n  const [auth, setAuth] = useState(false);\n  const [processed, setProcessed] = useState(true);\n  const [data, setData] = useState(false);\n  const [wordCloud, setWordCloud] = useState(null);\n\n  const handleSignIn = (e) => {\n    ApiCalendar.handleAuthClick();\n    if (ApiCalendar.sign) {\n      setAuth(true);\n      console.log(auth);\n    }\n  }\n  \n  const handleSignOut = (e) => {\n    ApiCalendar.handleSignoutClick();\n    setAuth(false);\n    console.log(auth);\n  }\n\n  const getEvents = async () => {\n    while (!ApiCalendar.sign) {\n      console.log('waiting to sign in');\n    }\n    const { result } = await ApiCalendar.listEvents({\n      timeMin: moment().subtract(3, 'days').toISOString(),\n      timeMax: moment().toISOString(),\n      showDeleted: true,\n      maxResults: 15,\n      orderBy: 'updated'\n    });\n    console.log(result);\n    setData(result);\n    setProcessed(true);\n  }\n\n  const handleGraphics = () => {\n    if (data.items) {\n      const wordMap = processText(data.items);\n      let wordCloud = [];\n      Object.keys(wordMap).forEach(key => {\n        wordCloud.push({\n          text: key,\n          value: wordMap[key]\n        });\n      });\n      // temp\n      return (\n        <ReactWordCloud words={wordCloud}/>\n      );\n    } else {\n      return (\n        <p>Loading...</p>\n      );\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {!auth ? \n        <button onClick={(e) => handleSignIn(e)}>Sign In</button> : \n        <>\n          <button onClick={(e) => handleSignOut(e)}>Sign Out</button>\n          <button onClick={(e) => getEvents()}>Process Calendar Data</button>\n        </>\n      }\n      {processed ? handleGraphics(): <p>Loading</p>}\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}