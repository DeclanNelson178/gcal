{"ast":null,"code":"const aggregateEvents = events => {\n  console.log(events);\n  const eventMap = {};\n  events.forEach(event => {\n    const eventName = event.summary;\n    console.log(event.end);\n    console.log(String(event.end));\n    const time = event.end.getTime() - event.start.getTime();\n    console.log(time);\n\n    if (time in eventMap) {\n      eventMap[eventName] += time;\n    } else {\n      eventMap[eventName] = time;\n    }\n  });\n  return eventMap;\n};\n\nexport default aggregateEvents;","map":{"version":3,"names":["aggregateEvents","events","console","log","eventMap","forEach","event","eventName","summary","end","String","time","getTime","start"],"sources":["/Users/declannelson/code/gcal/v1/src/helpers/dataAggregator.js"],"sourcesContent":["const aggregateEvents = (events) => {\n    console.log(events);\n    const eventMap = {}\n    events.forEach(event => {\n        const eventName = event.summary;\n        console.log(event.end);\n        console.log(String(event.end));\n        const time = event.end.getTime() - event.start.getTime();\n        console.log(time);\n\n        if (time in eventMap) { \n            eventMap[eventName] += time;\n        } else {\n            eventMap[eventName] = time;\n        }\n    });\n\n    return eventMap;\n}\n\nexport default aggregateEvents;"],"mappings":"AAAA,MAAMA,eAAe,GAAIC,MAAD,IAAY;EAChCC,OAAO,CAACC,GAAR,CAAYF,MAAZ;EACA,MAAMG,QAAQ,GAAG,EAAjB;EACAH,MAAM,CAACI,OAAP,CAAeC,KAAK,IAAI;IACpB,MAAMC,SAAS,GAAGD,KAAK,CAACE,OAAxB;IACAN,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACG,GAAlB;IACAP,OAAO,CAACC,GAAR,CAAYO,MAAM,CAACJ,KAAK,CAACG,GAAP,CAAlB;IACA,MAAME,IAAI,GAAGL,KAAK,CAACG,GAAN,CAAUG,OAAV,KAAsBN,KAAK,CAACO,KAAN,CAAYD,OAAZ,EAAnC;IACAV,OAAO,CAACC,GAAR,CAAYQ,IAAZ;;IAEA,IAAIA,IAAI,IAAIP,QAAZ,EAAsB;MAClBA,QAAQ,CAACG,SAAD,CAAR,IAAuBI,IAAvB;IACH,CAFD,MAEO;MACHP,QAAQ,CAACG,SAAD,CAAR,GAAsBI,IAAtB;IACH;EACJ,CAZD;EAcA,OAAOP,QAAP;AACH,CAlBD;;AAoBA,eAAeJ,eAAf"},"metadata":{},"sourceType":"module"}