{"ast":null,"code":"const aggregateEvents = events => {\n  const eventMap = {};\n  const allDayEvents = new Set();\n  events.forEach(event => {\n    const eventName = event.summary;\n\n    if ('dateTime' in event.end) {\n      const end = new Date(event.end.dateTime);\n      const start = new Date(event.start.dateTime);\n      const msTime = end.getTime() - start.getTime();\n      const minTime = msTime / 1000 / 60;\n\n      if (eventName in eventMap) {\n        eventMap[eventName] += minTime;\n      } else {\n        eventMap[eventName] = minTime;\n      }\n    } else {\n      allDayEvents.add(eventName);\n    }\n  });\n  return [eventMap, allDayEvents];\n};\n\nconst colorMap = {\n  0: 'Default Calendar Color (Light Blue)',\n  1: 'Lavendar',\n  2: 'Sage',\n  3: 'Grape',\n  4: 'Flamingo',\n  5: 'Banana',\n  6: 'Tangerine',\n  7: 'Peacock',\n  8: 'Graphite',\n  9: 'Blueberry',\n  10: 'Basil'\n};\n\nconst aggregateColors = events => {\n  const colorCounter = {};\n  events.forEach(event => {\n    var color = colorMap[event.colorId] ? colorMap[event.colorId] : 'Default';\n\n    if ('dateTime' in event.end) {\n      const end = new Date(event.end.dateTime);\n      const start = new Date(event.start.dateTime);\n      const msTime = end.getTime() - start.getTime();\n      const minTime = msTime / 1000 / 60;\n\n      if (color in colorCounter) {\n        colorCounter[color] += minTime;\n      } else {\n        colorCounter[color] = minTime;\n      }\n    }\n  });\n  return colorCounter;\n};\n\nexport { aggregateEvents, aggregateColors };","map":{"version":3,"names":["aggregateEvents","events","eventMap","allDayEvents","Set","forEach","event","eventName","summary","end","Date","dateTime","start","msTime","getTime","minTime","add","colorMap","aggregateColors","colorCounter","color","colorId"],"sources":["/Users/declannelson/code/gcal/src/helpers/dataAggregator.js"],"sourcesContent":["const aggregateEvents = (events) => {\n    const eventMap = {};\n    const allDayEvents = new Set();\n    events.forEach(event => {\n        const eventName = event.summary;\n        if ('dateTime' in event.end) {\n            const end = new Date(event.end.dateTime);\n            const start = new Date(event.start.dateTime);\n            const msTime = end.getTime() - start.getTime();\n            const minTime = msTime / 1000 / 60;\n\n            if (eventName in eventMap) { \n                eventMap[eventName] += minTime;\n            } else {\n                eventMap[eventName] = minTime;\n            }\n        } else {\n            allDayEvents.add(eventName);\n        }\n    });\n\n    return [eventMap, allDayEvents];\n}\n\nconst colorMap = {\n    0: 'Default Calendar Color (Light Blue)',\n    1: 'Lavendar',\n    2: 'Sage',\n    3: 'Grape',\n    4: 'Flamingo',\n    5: 'Banana',\n    6: 'Tangerine',\n    7: 'Peacock',\n    8: 'Graphite',\n    9: 'Blueberry',\n    10: 'Basil'\n}\n\nconst aggregateColors = (events) => {\n    const colorCounter = {};\n    events.forEach(event => {\n        var color = colorMap[event.colorId] ? colorMap[event.colorId] : 'Default'\n        \n        if ('dateTime' in event.end) {\n            const end = new Date(event.end.dateTime);\n            const start = new Date(event.start.dateTime);\n            const msTime = end.getTime() - start.getTime();\n            const minTime = msTime / 1000 / 60;\n\n            if (color in colorCounter) { \n                colorCounter[color] += minTime;\n            } else {\n                colorCounter[color] = minTime;\n            }\n        } \n    });\n\n    return colorCounter;\n}\n\nexport {aggregateEvents, aggregateColors};"],"mappings":"AAAA,MAAMA,eAAe,GAAIC,MAAD,IAAY;EAChC,MAAMC,QAAQ,GAAG,EAAjB;EACA,MAAMC,YAAY,GAAG,IAAIC,GAAJ,EAArB;EACAH,MAAM,CAACI,OAAP,CAAeC,KAAK,IAAI;IACpB,MAAMC,SAAS,GAAGD,KAAK,CAACE,OAAxB;;IACA,IAAI,cAAcF,KAAK,CAACG,GAAxB,EAA6B;MACzB,MAAMA,GAAG,GAAG,IAAIC,IAAJ,CAASJ,KAAK,CAACG,GAAN,CAAUE,QAAnB,CAAZ;MACA,MAAMC,KAAK,GAAG,IAAIF,IAAJ,CAASJ,KAAK,CAACM,KAAN,CAAYD,QAArB,CAAd;MACA,MAAME,MAAM,GAAGJ,GAAG,CAACK,OAAJ,KAAgBF,KAAK,CAACE,OAAN,EAA/B;MACA,MAAMC,OAAO,GAAGF,MAAM,GAAG,IAAT,GAAgB,EAAhC;;MAEA,IAAIN,SAAS,IAAIL,QAAjB,EAA2B;QACvBA,QAAQ,CAACK,SAAD,CAAR,IAAuBQ,OAAvB;MACH,CAFD,MAEO;QACHb,QAAQ,CAACK,SAAD,CAAR,GAAsBQ,OAAtB;MACH;IACJ,CAXD,MAWO;MACHZ,YAAY,CAACa,GAAb,CAAiBT,SAAjB;IACH;EACJ,CAhBD;EAkBA,OAAO,CAACL,QAAD,EAAWC,YAAX,CAAP;AACH,CAtBD;;AAwBA,MAAMc,QAAQ,GAAG;EACb,GAAG,qCADU;EAEb,GAAG,UAFU;EAGb,GAAG,MAHU;EAIb,GAAG,OAJU;EAKb,GAAG,UALU;EAMb,GAAG,QANU;EAOb,GAAG,WAPU;EAQb,GAAG,SARU;EASb,GAAG,UATU;EAUb,GAAG,WAVU;EAWb,IAAI;AAXS,CAAjB;;AAcA,MAAMC,eAAe,GAAIjB,MAAD,IAAY;EAChC,MAAMkB,YAAY,GAAG,EAArB;EACAlB,MAAM,CAACI,OAAP,CAAeC,KAAK,IAAI;IACpB,IAAIc,KAAK,GAAGH,QAAQ,CAACX,KAAK,CAACe,OAAP,CAAR,GAA0BJ,QAAQ,CAACX,KAAK,CAACe,OAAP,CAAlC,GAAoD,SAAhE;;IAEA,IAAI,cAAcf,KAAK,CAACG,GAAxB,EAA6B;MACzB,MAAMA,GAAG,GAAG,IAAIC,IAAJ,CAASJ,KAAK,CAACG,GAAN,CAAUE,QAAnB,CAAZ;MACA,MAAMC,KAAK,GAAG,IAAIF,IAAJ,CAASJ,KAAK,CAACM,KAAN,CAAYD,QAArB,CAAd;MACA,MAAME,MAAM,GAAGJ,GAAG,CAACK,OAAJ,KAAgBF,KAAK,CAACE,OAAN,EAA/B;MACA,MAAMC,OAAO,GAAGF,MAAM,GAAG,IAAT,GAAgB,EAAhC;;MAEA,IAAIO,KAAK,IAAID,YAAb,EAA2B;QACvBA,YAAY,CAACC,KAAD,CAAZ,IAAuBL,OAAvB;MACH,CAFD,MAEO;QACHI,YAAY,CAACC,KAAD,CAAZ,GAAsBL,OAAtB;MACH;IACJ;EACJ,CAfD;EAiBA,OAAOI,YAAP;AACH,CApBD;;AAsBA,SAAQnB,eAAR,EAAyBkB,eAAzB"},"metadata":{},"sourceType":"module"}