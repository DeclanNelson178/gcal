{"ast":null,"code":"var _jsxFileName = \"/Users/declannelson/code/gcal/v1/src/App.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from 'react';\n// import ApiCalendar from 'react-google-calendar-api';\n// import DatePicker from 'react-date-picker';\n// import Button from 'react-bootstrap/Button';\n// import Container from 'react-bootstrap/Container';\n// import Jumbotron from 'react-bootstrap/Jumbotron';\n// import DisplayData from './components/DisplayData';\n// const App = () => {\n//   const [auth, setAuth] = useState(false);\n//   const [processed, setProcessed] = useState(false);\n//   const [includeDeleted, setIncludeDeleted] = useState(false);\n//   const [data, setData] = useState(false);\n//   const [startDate, setStartDate] = useState(new Date());\n//   const [endDate, setEndDate] = useState(new Date());\n//   const handleSignIn = (e) => {\n//     ApiCalendar.handleAuthClick();\n//     if (ApiCalendar.sign) {\n//       setAuth(true);\n//     }\n//   }\n//   const handleSignOut = (e) => {\n//     ApiCalendar.handleSignoutClick();\n//     setAuth(false);\n//     setProcessed(false);\n//   }\n//   const getEvents = async () => {\n//     while (!ApiCalendar.sign) {\n//       console.log('waiting to sign in');\n//     }\n//     const adjustedEndDate = new Date(endDate);\n//     adjustedEndDate.setDate(adjustedEndDate.getDate() + 1);\n//     const { result } = await ApiCalendar.listEvents({\n//       timeMin: startDate.toISOString(),\n//       timeMax: adjustedEndDate.toISOString(),\n//       showDeleted: includeDeleted,\n//       maxResults: 10000,\n//       orderBy: 'startTime',\n//       singleEvents: true\n//     });\n//     setData(result.items);\n//     setProcessed(true);\n//   }\n//   return (\n//     <Container className='p-3'>\n//       {!auth ? \n//         <Button onClick={(e) => handleSignIn(e)}>Sign In</Button> : \n//         <>\n//           <Button onClick={(e) => handleSignOut(e)}>Sign Out</Button>\n//           <div>\n//             <p>Start Date:</p>\n//             <DatePicker onChange={setStartDate} value={startDate}/>\n//             <p>End Date (Inclusive): </p>\n//             <DatePicker onChange={setEndDate} value={endDate}/>\n//           </div>\n//           <div>\n//             <label>\n//               <input type=\"checkbox\" checked={includeDeleted} onChange={() => setIncludeDeleted(!includeDeleted)}/>\n//               Include Deleted\n//             </label>\n//           </div>\n//           <button onClick={(e) => getEvents()}>Process Calendar Data</button>\n//         </>\n//       }\n//       {processed ? <DisplayData data={data}/>: <p></p>}\n//     </Container>\n//   );\n// }\n// export default App;\nimport React, { useState } from 'react';\nimport Toast from 'react-bootstrap/Toast';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ExampleToast = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [show, toggleShow] = useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!show && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => toggleShow(true),\n      children: \"Show Toast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Toast, {\n      show: show,\n      onClose: () => toggleShow(false),\n      children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"mr-auto\",\n          children: \"React-Bootstrap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ExampleToast, \"sjyyMBiKq0YNTUf6zAJiZcCurDg=\");\n\n_c = ExampleToast;\n\nconst App = () => /*#__PURE__*/_jsxDEV(Container, {\n  className: \"p-3\",\n  children: /*#__PURE__*/_jsxDEV(Container, {\n    className: \"p-5 mb-4 bg-light rounded-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Welcome To React-Bootstrap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExampleToast, {\n      children: [\"We now have Shit\", /*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"tada\",\n        children: \"\\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 110,\n  columnNumber: 3\n}, this);\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ExampleToast\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Toast","Container","Button","ExampleToast","children","show","toggleShow","App"],"sources":["/Users/declannelson/code/gcal/v1/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n\n// import ApiCalendar from 'react-google-calendar-api';\n// import DatePicker from 'react-date-picker';\n// import Button from 'react-bootstrap/Button';\n// import Container from 'react-bootstrap/Container';\n// import Jumbotron from 'react-bootstrap/Jumbotron';\n\n\n// import DisplayData from './components/DisplayData';\n\n// const App = () => {\n\n//   const [auth, setAuth] = useState(false);\n//   const [processed, setProcessed] = useState(false);\n//   const [includeDeleted, setIncludeDeleted] = useState(false);\n//   const [data, setData] = useState(false);\n//   const [startDate, setStartDate] = useState(new Date());\n//   const [endDate, setEndDate] = useState(new Date());\n\n//   const handleSignIn = (e) => {\n//     ApiCalendar.handleAuthClick();\n//     if (ApiCalendar.sign) {\n//       setAuth(true);\n//     }\n//   }\n  \n//   const handleSignOut = (e) => {\n//     ApiCalendar.handleSignoutClick();\n//     setAuth(false);\n//     setProcessed(false);\n//   }\n\n//   const getEvents = async () => {\n//     while (!ApiCalendar.sign) {\n//       console.log('waiting to sign in');\n//     }\n\n//     const adjustedEndDate = new Date(endDate);\n//     adjustedEndDate.setDate(adjustedEndDate.getDate() + 1);\n\n//     const { result } = await ApiCalendar.listEvents({\n//       timeMin: startDate.toISOString(),\n//       timeMax: adjustedEndDate.toISOString(),\n//       showDeleted: includeDeleted,\n//       maxResults: 10000,\n//       orderBy: 'startTime',\n//       singleEvents: true\n//     });\n\n//     setData(result.items);\n//     setProcessed(true);\n//   }\n\n//   return (\n//     <Container className='p-3'>\n//       {!auth ? \n//         <Button onClick={(e) => handleSignIn(e)}>Sign In</Button> : \n//         <>\n//           <Button onClick={(e) => handleSignOut(e)}>Sign Out</Button>\n//           <div>\n//             <p>Start Date:</p>\n//             <DatePicker onChange={setStartDate} value={startDate}/>\n//             <p>End Date (Inclusive): </p>\n//             <DatePicker onChange={setEndDate} value={endDate}/>\n//           </div>\n//           <div>\n//             <label>\n//               <input type=\"checkbox\" checked={includeDeleted} onChange={() => setIncludeDeleted(!includeDeleted)}/>\n//               Include Deleted\n//             </label>\n//           </div>\n//           <button onClick={(e) => getEvents()}>Process Calendar Data</button>\n//         </>\n//       }\n\n//       {processed ? <DisplayData data={data}/>: <p></p>}\n//     </Container>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { useState } from 'react';\n\nimport Toast from 'react-bootstrap/Toast';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\n\nimport './App.css';\n\nconst ExampleToast = ({ children }) => {\n  const [show, toggleShow] = useState(true);\n\n  return (\n    <>\n      {!show && <Button onClick={() => toggleShow(true)}>Show Toast</Button>}\n      <Toast show={show} onClose={() => toggleShow(false)}>\n        <Toast.Header>\n          <strong className=\"mr-auto\">React-Bootstrap</strong>\n        </Toast.Header>\n        <Toast.Body>{children}</Toast.Body>\n      </Toast>\n    </>\n  );\n};\n\nconst App = () => (\n  <Container className=\"p-3\">\n    <Container className=\"p-5 mb-4 bg-light rounded-3\">\n      <h1 className=\"header\">Welcome To React-Bootstrap</h1>\n      <ExampleToast>\n        We now have Shit\n        <span role=\"img\" aria-label=\"tada\">\n          ðŸŽ‰\n        </span>\n      </ExampleToast>\n    </Container>\n  </Container>\n);\n\nexport default App;\n\n"],"mappings":";;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,OAAO,WAAP;;;;AAEA,MAAMC,YAAY,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACrC,MAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBP,QAAQ,CAAC,IAAD,CAAnC;EAEA,oBACE;IAAA,WACG,CAACM,IAAD,iBAAS,QAAC,MAAD;MAAQ,OAAO,EAAE,MAAMC,UAAU,CAAC,IAAD,CAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADZ,eAEE,QAAC,KAAD;MAAO,IAAI,EAAED,IAAb;MAAmB,OAAO,EAAE,MAAMC,UAAU,CAAC,KAAD,CAA5C;MAAA,wBACE,QAAC,KAAD,CAAO,MAAP;QAAA,uBACE;UAAQ,SAAS,EAAC,SAAlB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,KAAD,CAAO,IAAP;QAAA,UAAaF;MAAb;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAWD,CAdD;;GAAMD,Y;;KAAAA,Y;;AAgBN,MAAMI,GAAG,GAAG,mBACV,QAAC,SAAD;EAAW,SAAS,EAAC,KAArB;EAAA,uBACE,QAAC,SAAD;IAAW,SAAS,EAAC,6BAArB;IAAA,wBACE;MAAI,SAAS,EAAC,QAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,YAAD;MAAA,4CAEE;QAAM,IAAI,EAAC,KAAX;QAAiB,cAAW,MAA5B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF;;MAAMA,G;AAcN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}